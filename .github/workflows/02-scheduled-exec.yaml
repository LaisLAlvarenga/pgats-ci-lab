# CI DE nível N2. ( Disparo agendado )

## a b c d e
### a - minuto
### b - hora
### c - dia do mês
### d - mês
### e - dia da semana

## Exemplo: Rodar o regressivo toda segunda-feira pela manhã.
## Cronograma: 0 6 * * 1 -- * EQUIVALE A TODOS, OU SEJA TODOS OS DIAS DO MÊS.
### O 1 equivale a segunda-feira, sendo o primeiro dia o domingo, dia zero.
### O nome disso é CRON. (Ferramenta crontab.guru te gera isso de forma visual e fácil)

##Nome do pipeline.
name: 'Execução Agendada'

##Regras de disparo (Gatilhos / Triggers).

on:
  schedule:
    ## Cronograma de execução.
    ## Abaixo, o cronograma está definido para executar a cada 5 minutos.
    - cron: '5 11 * * 4'

##Configuração de quais atividades serão executadas. (Se teste de unidade / E2E / Testes de mutação / etc).
##Jobs são as atividades que serão executadas.

jobs: 
  ## Nome do job criado;
  e2e-tests:
    
    ## Máqina que o job serão executados.
    runs-on: ubuntu-latest

    ## Definição de quais passos serão executados.
    steps:
      ###Passo 1: Clone do projeto.
      ####Obs: o checout quando não passado nada assume que o projeto a ser clonado é o projeto que o arrquivo yaml está presente.
      - uses: actions/checkout@v4

      ###Passo 2: Instalação do NodeJS.
      - uses: actions/setup-node@v4
        with:
          node-version: latest

      ###Passo 3: Instalação do yarn.
      ####OBS: Sintaxe para comandos de execução no terminal.
      - name: Instalação do Yarn.
        run: npm install -g yarn
      
      ###Passo 4: Instalação das dependências do projeto.
      - name: Instalação das dependências do projeto.
        run: yarn install
      
      ###Passo 5: Instalação Playwright. (Instalação dos navegadores dele)
      - name: Instalação do Playwright.
        run: yarn playwright install

      ###Passo 6: Execução dos testes E2E.
      - name: Execução dos testes E2E.
        run: yarn run e2e

